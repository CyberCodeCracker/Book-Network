name: BSN Backend API Pipeline

on:
  push:
    branches:
      - ci-cd
    # Triggers pipeline backend when changes are performed in the specific paths
    paths:
      - book-network/**
      - docker/backend/**
      - '../../docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    runs-on: self-hosted
    name: Compile Project
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Checkouts current branch only

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Make Mvnw Executable
        run: |
          cd book-network-api 
          chmod +x ./mvnw
      - name: Running Unit Tests
        run: |
          cd book-network-api
          ./mvnw clean compile

  build:
    runs-on: self-hosted
    name: Build backend
    needs: [compile]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Checkouts current branch only

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Make mvnw executable
        run: |
          cd book-network-api 
          chmod +x ./mvnw
      - name: Compile project
        run: |
          cd book-network-api
          ./mvnw clean compile
  build-image:
    name: Build Docker image
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Checkouts current branch only

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: List current directory
        run: ls -la

      - name: Make mvnw executable
        run: |
          cd book-network-api 
          chmod +x ./mvnw
      - name: Extract Project version
        id: extract_version
        run: |
          cd book-network-api
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push To Dockerhub
        uses: docker/build-push-action@v5
        with:
          context: book-network-api
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
            EMAIL_HOST_NAME=${{ secrets.EMAIL_HOST_NAME }}
            EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
  deploy:
    name: Deploy Backend
    runs-on: self-hosted
    needs: [build-image]
    steps:
      - name: Set Up SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.VPS_PRIVATE_KEY }}

      - name: Copy Docker-Compose File to Target Directory
        run: |
          mkdir -p ~/actions-runner/ci-cd
          cp docker-compose.yml ~/actions-runner/ci-cd/
      - name: Set ENV variables and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          export EMAIL_HOST_NAME=${{ secrets.EMAIL_HOST_NAME }}
          export EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
          export EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF
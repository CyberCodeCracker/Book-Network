name: BSN Backend API Pipeline

on:
  push:
    branches:
      - ci-cd
    # Triggers pipeline backend when changes are performed in the specific paths
    paths:
      - book-network-api/**
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    runs-on: self-hosted
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Checkouts current branch only

      - name: Setup JAVA JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile project
        run: |
          cd book-network-api 
          .\mvnw clean compile

  unit-tests:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Checkouts current branch only

      - name: Setup JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Running units Tests
        run: |
          cd book-network-api 
          .\mvnw clean test

  build:
    runs-on: self-hosted
    name: Build backend
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Checkouts current branch only

      - name: Setup JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build Project
        run: |
          cd book-network-api 
          .\mvnw clean package



  build-image:
    name: Build Docker image
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Checkouts current branch only

      - name: Setup JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Extract project
        id: extract_version
        run: |
          cd book-network-api
          echo "VERSION=$(.\mvnw -q help:evaluate -Dexpression="project.version" -DforceStdout --non-recursive)" >> $GITHUB_OUTPUT
          
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to Dockerhub
        uses: docker/build-push-action@v5
        with:
          context: book-network-api
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}

  deploy:
    name: Deploy Backend
    runs-on: self-hosted
    needs: [build-image]
    steps:
      - name: Create deployment folder
        run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp docker-compose.yml ${{ secrets.VPS_USERNAME }}@{{ secrets.VPS_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variables and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          export EMAIL_HOSTNAME$={{ secrets.EMAIL_HOST_NAME }}
          export EMAIL_USERNAME$={{ secrets.EMAIL_USERNAME }}
          export EMAIL_PASSWORD$={{ secrets.EMAIL_PASSWORD }}
          cd ci-cd
          docker-compose -f docker-compose.yml pull -q
          docker-compose -f docker-compose.yml up -d
          EOF
